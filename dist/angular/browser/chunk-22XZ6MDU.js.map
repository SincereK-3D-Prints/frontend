{
  "version": 3,
  "sources": ["src/e-commerce/product-list/product-list.component.ts", "src/e-commerce/product-list/product-list.component.html"],
  "sourcesContent": ["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { CurrencyPipe, NgClass, NgForOf, NgStyle } from '@angular/common';\r\nimport { Product } from './product';\r\n\r\n@Component({\r\n  selector: 'shop-product-list',\r\n  standalone: true,\r\n  imports: [\r\n    RippleModule,\r\n    NgStyle,\r\n    NgClass,\r\n    NgForOf,\r\n    CurrencyPipe\r\n  ],\r\n  templateUrl: './product-list.component.html',\r\n  styleUrl: './product-list.component.scss'\r\n})\r\nexport class ProductListComponent {\r\n  @Input() products: Product[] = [];\r\n  @Output() toCart = new EventEmitter<Product>();\r\n\r\n  getColorClass(color: string) {\r\n    return {\r\n      [`bg-${color.toLowerCase()}-500`]: true,\r\n      [`hover:border-${color.toLowerCase()}-500`]: true\r\n    };\r\n  }\r\n\r\n  getColorStyle(product: any, color: string) {\r\n    return {\r\n      'box-shadow': product.color === color ? `0 0 0 0.2rem var(--${color.toLowerCase()}-500)` : null\r\n    };\r\n  }\r\n\r\n  discountPrice({ price = 0, discount = 0, discount_type = 'percent' }: Product) {\r\n    if (discount_type === 'flat') {\r\n      return price - discount;\r\n    }\r\n    return price - (price * discount / 100);\r\n  }\r\n\r\n  addToCart($event: MouseEvent, product: Product) {\r\n    $event.stopPropagation();\r\n    this.toCart.emit(product);\r\n  }\r\n}\r\n", "<div class=\"surface-section\">\r\n  <div class=\"grid -mt-3 -ml-3 -mr-3\">\r\n    @for (product of products; track $index) {\r\n      <div class=\"col-12 md:col-6 lg:col-3 mb-5 lg:mb-0\">\r\n        <div class=\"mb-3 relative\">\r\n          <img [src]=\"product.image\" class=\"w-full\"  alt=\"product.name\" />\r\n          @if (product.discount) {\r\n            <span class=\"discount-badge\">\r\n              @if (product.discount_type === 'flat') {\r\n                {{ product.discount | currency: product.currency ?? 'USD' }} OFF\r\n              } @else {\r\n                {{ product.discount }}% OFF\r\n              }\r\n            </span>\r\n          }\r\n          <button pRipple type=\"button\" class=\"add-to-cart\" (click)=\"addToCart($event, product)\">\r\n            <i class=\"pi pi-shopping-cart mr-3 text-base\"></i>\r\n            <span class=\"text-base\">Add to Cart</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"flex flex-column align-items-center\">\r\n          <div class=\"flex justify-content-around w-full\">\r\n            <span class=\"text-xl text-900 font-medium mb-3\">{{ product.name }}</span>\r\n          </div>\r\n          <div class=\"flex mb-4 justify-content-around w-full\">\r\n            @if (product.discount) {\r\n              <span class=\"line-through text-xl text-600\">\r\n                {{ product.price | currency: product.currency ?? 'USD' }}\r\n              </span>\r\n            }\r\n            <span class=\"text-xl text-900 mb-3\">\r\n              {{ discountPrice(product) | currency: product.currency ?? 'USD' }}\r\n            </span>\r\n          </div>\r\n          @if (product.colors) {\r\n            <div class=\"flex align-items-center mb-3\">\r\n              @for (color of product.colors; track color) {\r\n                <div\r\n                  class=\"w-2rem h-2rem flex-shrink-0 border-circle mr-3 cursor-pointer border-2 surface-border transition-all transition-duration-300\"\r\n                  [ngClass]=\"getColorClass(color)\"\r\n                  [ngStyle]=\"getColorStyle(product, color)\"\r\n                  (click)=\"product.color = color\"\r\n                ></div>\r\n              }\r\n            </div>\r\n          }\r\n          @if (product.color) {\r\n            <span class=\"text-500\">\r\n              {{product.color}}\r\n            </span>\r\n          }\r\n        </div>\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSgB,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,WAAA,WAAA,WAAA,WAAA,cAAA,QAAA,aAAA,SAAA,WAAA,KAAA,GAAA,OAAA;;;;;AAEA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,WAAA,UAAA,QAAA;;;;;AAJJ,IAAA,yBAAA,GAAA,QAAA,CAAA;AACE,IAAA,qBAAA,GAAA,iEAAA,GAAA,CAAA,EAAwC,GAAA,iEAAA,GAAA,CAAA;AAK1C,IAAA,uBAAA;;;;AALE,IAAA,oBAAA;AAAA,IAAA,wBAAA,GAAA,WAAA,kBAAA,SAAA,IAAA,CAAA;;;;;AAkBA,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;;AACF,IAAA,uBAAA;;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,WAAA,QAAA,WAAA,WAAA,cAAA,QAAA,aAAA,SAAA,WAAA,KAAA,GAAA,GAAA;;;;;;AAUA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAIE,IAAA,qBAAA,SAAA,SAAA,gFAAA;AAAA,YAAA,WAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,aAAA,wBAAA,CAAA,EAAA;AAAA,aAAA,sBAAA,WAAA,QAAA,QAAA;IAAA,CAAA;AACD,IAAA,uBAAA;;;;;;AAHC,IAAA,qBAAA,WAAA,OAAA,cAAA,QAAA,CAAA,EAAgC,WAAA,OAAA,cAAA,YAAA,QAAA,CAAA;;;;;AAJtC,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,2BAAA,GAAA,0DAAA,GAAA,GAAA,OAAA,IAAA,mCAAA;AAQF,IAAA,uBAAA;;;;AARE,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,MAAA;;;;;AAWF,IAAA,yBAAA,GAAA,QAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,OAAA,GAAA;;;;;;AA7CR,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAmD,GAAA,OAAA,CAAA;AAE/C,IAAA,oBAAA,GAAA,OAAA,CAAA;AACA,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,QAAA,CAAA;AASA,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAkD,IAAA,qBAAA,SAAA,SAAA,4DAAA,QAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,QAAA,UAAA,CAA0B;IAAA,CAAA;AACnF,IAAA,oBAAA,GAAA,KAAA,CAAA;AACA,IAAA,yBAAA,GAAA,QAAA,CAAA;AAAwB,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA,EAAO,EACnC;AAEX,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAiD,GAAA,OAAA,EAAA,EACC,IAAA,QAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AAAkB,IAAA,uBAAA,EAAO;AAE3E,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,QAAA,EAAA;AAKA,IAAA,yBAAA,IAAA,QAAA,EAAA;AACE,IAAA,iBAAA,EAAA;;AACF,IAAA,uBAAA,EAAO;AAET,IAAA,qBAAA,IAAA,oDAAA,GAAA,GAAA,OAAA,EAAA,EAAsB,IAAA,oDAAA,GAAA,GAAA,QAAA,EAAA;AAiBxB,IAAA,uBAAA,EAAM;;;;;;AA9CC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,WAAA,OAAA,uBAAA;AACL,IAAA,oBAAA;AAAA,IAAA,wBAAA,GAAA,WAAA,WAAA,IAAA,EAAA;AAgBkD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,IAAA;AAGhD,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,IAAA,WAAA,WAAA,KAAA,EAAA;AAME,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,IAAA,GAAA,OAAA,cAAA,UAAA,IAAA,WAAA,WAAA,cAAA,QAAA,aAAA,SAAA,WAAA,KAAA,GAAA,GAAA;AAGJ,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,IAAA,WAAA,SAAA,KAAA,EAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,wBAAA,IAAA,WAAA,QAAA,KAAA,EAAA;;;AD5BJ,IAAO,wBAAP,MAAO,sBAAoB;EAbjC,cAAA;AAcW,SAAA,WAAsB,CAAA;AACrB,SAAA,SAAS,IAAI,aAAY;;EAEnC,cAAc,OAAa;AACzB,WAAO;MACL,CAAC,MAAM,MAAM,YAAW,CAAE,MAAM,GAAG;MACnC,CAAC,gBAAgB,MAAM,YAAW,CAAE,MAAM,GAAG;;EAEjD;EAEA,cAAc,SAAc,OAAa;AACvC,WAAO;MACL,cAAc,QAAQ,UAAU,QAAQ,sBAAsB,MAAM,YAAW,CAAE,UAAU;;EAE/F;EAEA,cAAc,EAAE,QAAQ,GAAG,WAAW,GAAG,gBAAgB,UAAS,GAAW;AAC3E,QAAI,kBAAkB,QAAQ;AAC5B,aAAO,QAAQ;IACjB;AACA,WAAO,QAAS,QAAQ,WAAW;EACrC;EAEA,UAAU,QAAoB,SAAgB;AAC5C,WAAO,gBAAe;AACtB,SAAK,OAAO,KAAK,OAAO;EAC1B;;;mBA3BW,uBAAoB;AAAA;sFAApB,uBAAoB,WAAA,CAAA,CAAA,mBAAA,CAAA,GAAA,QAAA,EAAA,UAAA,WAAA,GAAA,SAAA,EAAA,QAAA,SAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,QAAA,SAAA,SAAA,OAAA,GAAA,CAAA,GAAA,UAAA,YAAA,YAAA,QAAA,SAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,OAAA,gBAAA,GAAA,UAAA,GAAA,KAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,WAAA,IAAA,QAAA,UAAA,GAAA,eAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,oBAAA,QAAA,WAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,QAAA,eAAA,oBAAA,GAAA,CAAA,GAAA,QAAA,0BAAA,QAAA,GAAA,CAAA,GAAA,WAAA,YAAA,eAAA,MAAA,GAAA,CAAA,GAAA,QAAA,QAAA,0BAAA,QAAA,GAAA,CAAA,GAAA,gBAAA,WAAA,UAAA,GAAA,CAAA,GAAA,WAAA,YAAA,MAAA,GAAA,CAAA,GAAA,QAAA,sBAAA,MAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,UAAA,UAAA,iBAAA,iBAAA,QAAA,kBAAA,YAAA,kBAAA,kBAAA,2BAAA,GAAA,WAAA,SAAA,GAAA,CAAA,GAAA,UAAA,UAAA,iBAAA,iBAAA,QAAA,kBAAA,YAAA,kBAAA,kBAAA,2BAAA,GAAA,SAAA,WAAA,SAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AClBjC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,CAAA;AAEzB,IAAA,2BAAA,GAAA,qCAAA,IAAA,IAAA,OAAA,GAAA,gCAAA;AAoDF,IAAA,uBAAA,EAAM;;;AApDJ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,IAAA,QAAA;;;EDOA;EAAY;EACZ;EACA;EAEA;AAAY,GAAA,QAAA,CAAA,4lgjBAAA,EAAA,CAAA;AAKV,IAAO,uBAAP;;6EAAO,sBAAoB,EAAA,WAAA,wBAAA,UAAA,4DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
